{"version":3,"sources":["webpack:///./src/pages/rect-gl/animation.js"],"names":["Animation","props","state","cubeRotation","updateAnimationState","bind","componentDidMount","this","rAF","requestAnimationFrame","setState","prevState","componentWillUnmount","cancelAnimationFrame","render","React","Component"],"mappings":"gKAGMA,E,YACJ,WAAYC,GAAQ,IAAD,SACjB,cAAMA,IAAN,MACKC,MAAQ,CAAEC,aAAc,GAC7B,EAAKC,qBAAuB,EAAKA,qBAAqBC,KAA1B,gBAHX,E,4CAMnBC,kBAAA,WACEC,KAAKC,IAAMC,sBAAsBF,KAAKH,uB,EAGxCA,qBAAA,WACEG,KAAKG,UAAS,SAAAC,GAAS,MAAK,CAC1BR,aAAcQ,EAAUR,aAAe,QAEzCI,KAAKC,IAAMC,sBAAsBF,KAAKH,uB,EAGxCQ,qBAAA,WACEC,qBAAqBN,KAAKC,M,EAG5BM,OAAA,WACE,OAAO,kBAAC,UAAD,CAAQX,aAAcI,KAAKL,MAAMC,gB,GAvBpBY,IAAMC,WA2BfhB","file":"component---src-pages-rect-gl-animation-js-6a9814f5c19d8ebc23eb.js","sourcesContent":["import React from \"react\"\nimport Canvas from \"./canvas\"\n\nclass Animation extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = { cubeRotation: 0 }\n    this.updateAnimationState = this.updateAnimationState.bind(this)\n  }\n\n  componentDidMount() {\n    this.rAF = requestAnimationFrame(this.updateAnimationState)\n  }\n\n  updateAnimationState() {\n    this.setState(prevState => ({\n      cubeRotation: prevState.cubeRotation + 0.01,\n    }))\n    this.rAF = requestAnimationFrame(this.updateAnimationState)\n  }\n\n  componentWillUnmount() {\n    cancelAnimationFrame(this.rAF)\n  }\n\n  render() {\n    return <Canvas cubeRotation={this.state.cubeRotation} />\n  }\n}\n\nexport default Animation\n"],"sourceRoot":""}