{"version":3,"sources":["webpack:///./src/pages/posts/highlight-test.md"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"4OAQaA,EAAe,GACtBC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YAACJ,EAAD,iBAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,uBAAK,oBAAMC,WAAW,MAClB,UAAa,uBADZ,0KAYL,uBAAK,oBAAMA,WAAW,MAClB,UAAa,mCACb,WAAc,QACd,SAAS,GAHR,0KAcL,uBAAK,oBAAMA,WAAW,MAClB,UAAa,gBADZ,+lCA2CL,uBAAK,oBAAMA,WAAW,MAClB,UAAa,8BADZ,0KAYL,uBAAK,oBAAMA,WAAW,MAClB,UAAa,8BACb,WAAc,WACd,YAAY,GAHX,SAML,uBAAK,oBAAMA,WAAW,MAClB,UAAa,6BACb,WAAc,oCACd,sBAAsB,EACtB,kBAAkB,GAJjB,SAOL,wCAAuB,0BAAYA,WAAW,KAAvB,6CAAvB,sBAKJJ,EAAWK,gBAAiB","file":"component---src-pages-posts-highlight-test-md-bdd0b0420e5d48cf7c3b.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/kkshen-site/kkshen-site/src/components/md/posts-layout.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`// In your gatsby-config.js\nplugins: [\n  {\n    resolve: \\`gatsby-transformer-remark\\`,\n    options: {\n      plugins: [\\`gatsby-remark-prismjs\\`],\n    },\n  },\n]\n`}</code></pre>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript{numberLines:\",\n        \"metastring\": \"true}\",\n        \"true}\": true\n      }}>{`// In your gatsby-config.js\nplugins: [\n  {\n    resolve: \\`gatsby-transformer-remark\\`,\n    options: {\n      plugins: [\\`gatsby-remark-prismjs\\`],\n    },\n  },\n]\n`}</code></pre>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`class FlavorForm extends React.Component {\n  // highlight-line\n  constructor(props) {\n    super(props);\n    this.state = {value: 'coconut'};\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    // highlight-next-line\n    this.setState({value: event.target.value});\n  }\n\n  // highlight-start\n  handleSubmit(event) {\n    alert('Your favorite flavor is: ' + this.state.value);\n    event.preventDefault();\n  }\n  // highlight-end\n\n  render() {\n    return (\n      { /* highlight-range{1,4-9,12} */ }\n      <form onSubmit={this.handleSubmit}>\n        <label>\n          Pick your favorite flavor:\n          <select value={this.state.value} onChange={this.handleChange}>\n            <option value=\"grapefruit\">Grapefruit</option>\n            <option value=\"lime\">Lime</option>\n            <option value=\"coconut\">Coconut</option>\n            <option value=\"mango\">Mango</option>\n          </select>\n        </label>\n        <input type=\"submit\" value=\"Submit\" />\n      </form>\n    );\n  }\n}\n`}</code></pre>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript{1,4-6}\"\n      }}>{`// In your gatsby-config.js\nplugins: [\n  {\n    resolve: \\`gatsby-transformer-remark\\`,\n    options: {\n      plugins: [\\`gatsby-remark-prismjs\\`],\n    },\n  },\n]\n`}</code></pre>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell{outputLines:\",\n        \"metastring\": \"2-10,12}\",\n        \"2-10,12}\": true\n      }}>{`cd\n`}</code></pre>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell{promptUser:\",\n        \"metastring\": \"alice}{promptHost: dev.localhost}\",\n        \"alice}{promptHost:\": true,\n        \"dev.localhost}\": true\n      }}>{`ls\n`}</code></pre>\n    <p>{`I can highlight `}<inlineCode parentName=\"p\">{`cssÂ±.some-class { background-color: red }`}</inlineCode>{` with CSS syntax.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}